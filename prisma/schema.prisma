generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  fullname          String
  email             String    @unique
  mobile            String?
  password          String
  role              Role      @default(USER)
  stripeCustomerId  String?   @unique
  resetToken        String?
  resetTokenExpires DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  orders            Order[]
}

model Product {
  id         String           @id @default(uuid())
  title      String
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  isDeleted  String           @default("active")
  orderItems OrderItem[]
  variants   ProductVariant[]
}

model ProductVariant {
  id                 String              @id @default(uuid())
  productId          String
  colour             String
  colourcode         String
  size               String
  stock              Int                 @default(0)
  price              Float
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  availabilityStatus VariantAvailability @default(ACTIVE)
  img                String
  orderItems         OrderItem[]         @relation("VariantOrderItems")
  product            Product             @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, colour, size])
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  total     Float
  stripePaymentIntentId String? @unique
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]
}

model OrderItem {
  id        String         @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  variantId String
  order     Order          @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
  variant   ProductVariant @relation("VariantOrderItems", fields: [variantId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum VariantAvailability {
  ACTIVE
  INACTIVE
}

enum OrderStatus {
  PENDING      
  PAID         
  FULFILLED    
}